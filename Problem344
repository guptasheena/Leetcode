Write a function that reverses a string. The input string is given as an array of characters char[].
Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.
You may assume all the characters consist of printable ascii characters.
 
Example 1:
Input: ["h","e","l","l","o"]
Output: ["o","l","l","e","h"]
Example 2:
Input: ["H","a","n","n","a","h"]
Output: ["h","a","n","n","a","H"]





Pythonic Solution:

class Solution:
    def reverseString(self, s):

        return s[::-1]

obj = Solution()
nums = ["h", "e", "l", "l", "o"]
print(obj.reverseString(nums))




Recursive Solution:

class Solution:
    def reverseString(self, s):

        s_length = len(s)
        length_half = s_length // 2

        if (s_length < 2):
            return s

        return self.reverseString(s[length_half:]) + self.reverseString(s[:length_half])

obj = Solution()
nums = ["h", "e", "l", "l", "o"]
print(obj.reverseString(nums))





Classic Solution:


class Solution:
    def reverseString(self, s):

        i = 0
        j = len(s) - 1

        while (i < j):
            s[i], s[j] = s[j], s[i]
            i += 1
            j -= 1
        return s

